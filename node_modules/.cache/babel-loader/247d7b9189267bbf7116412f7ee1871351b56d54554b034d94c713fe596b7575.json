{"ast":null,"code":"import React,{useEffect}from'react';import{capitalizeFirstLetter}from'../../utils/helpers';// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Nav(props){var currentTab=props.currentTab,handleTabChange=props.handleTabChange;useEffect(function(){document.title=capitalizeFirstLetter(currentTab.name);},[currentTab]);return/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-tabs\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#about\",onClick:function onClick(){return handleTabChange('About');}// Check to see if the currentTab is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentTab==='About'?'nav-link active':'nav-link',children:\"About\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#portfolio\",onClick:function onClick(){return handleTabChange('Portfolio');}// Check to see if the currentTab is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentTab==='Portfolio'?'nav-link active':'nav-link',children:\"Portfolio\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#contact\",onClick:function onClick(){return handleTabChange('Contact');}// Check to see if the currentTab is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentTab==='Contact'?'nav-link active':'nav-link',children:\"Contact\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#resume\",onClick:function onClick(){return handleTabChange('Resume');}// Check to see if the currentTab is `Resume`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n,className:currentTab==='Resume'?'nav-link active':'nav-link',children:\"Resume\"})})]})});}export default Nav;","map":{"version":3,"names":["React","useEffect","capitalizeFirstLetter","Nav","props","currentTab","handleTabChange","document","title","name"],"sources":["C:/Users/edrbe/Desktop/projects/react-portfolio/src/components/Nav/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction Nav(props) {\n  const {\n    currentTab,\n    handleTabChange,\n\n  } = props;\n\n    useEffect(() => {\n      document.title = capitalizeFirstLetter(currentTab.name);\n    }, [currentTab]);\n\n\n  return (\n\n   \n    <nav>\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n          <a\n            href=\"#about\"\n            onClick={() => handleTabChange('About')}\n            // Check to see if the currentTab is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentTab === 'About' ? 'nav-link active' : 'nav-link'}\n          >\n            About\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#portfolio\"\n            onClick={() => handleTabChange('Portfolio')}\n            // Check to see if the currentTab is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentTab === 'Portfolio' ? 'nav-link active' : 'nav-link'}\n          >\n            Portfolio\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#contact\"\n            onClick={() => handleTabChange('Contact')}\n            // Check to see if the currentTab is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentTab === 'Contact' ? 'nav-link active' : 'nav-link'}\n          >\n            Contact\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#resume\"\n            onClick={() => handleTabChange('Resume')}\n            // Check to see if the currentTab is `Resume`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={currentTab === 'Resume' ? 'nav-link active' : 'nav-link'}\n          >\n            Resume\n          </a>\n        </li>\n    </ul>\n    </nav>\n\n  );\n}\n\nexport default Nav;"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,qBAAqB,KAAQ,qBAAqB,CAE3D;AACA;AAAA,wFACA,QAASC,IAAG,CAACC,KAAK,CAAE,CAClB,GACEC,WAAU,CAGRD,KAAK,CAHPC,UAAU,CACVC,eAAe,CAEbF,KAAK,CAFPE,eAAe,CAIfL,SAAS,CAAC,UAAM,CACdM,QAAQ,CAACC,KAAK,CAAGN,qBAAqB,CAACG,UAAU,CAACI,IAAI,CAAC,CACzD,CAAC,CAAE,CAACJ,UAAU,CAAC,CAAC,CAGlB,mBAGE,kCACA,YAAI,SAAS,CAAC,cAAc,wBAC1B,WAAI,SAAS,CAAC,UAAU,uBACpB,UACE,IAAI,CAAC,QAAQ,CACb,OAAO,CAAE,yBAAMC,gBAAe,CAAC,OAAO,CAAC,EACvC;AAAA,CACA,SAAS,CAAED,UAAU,GAAK,OAAO,CAAG,iBAAiB,CAAG,UAAW,mBAGjE,EACD,cACL,WAAI,SAAS,CAAC,UAAU,uBACtB,UACE,IAAI,CAAC,YAAY,CACjB,OAAO,CAAE,yBAAMC,gBAAe,CAAC,WAAW,CAAC,EAC3C;AAAA,CACA,SAAS,CAAED,UAAU,GAAK,WAAW,CAAG,iBAAiB,CAAG,UAAW,uBAGrE,EACD,cACL,WAAI,SAAS,CAAC,UAAU,uBACtB,UACE,IAAI,CAAC,UAAU,CACf,OAAO,CAAE,yBAAMC,gBAAe,CAAC,SAAS,CAAC,EACzC;AAAA,CACA,SAAS,CAAED,UAAU,GAAK,SAAS,CAAG,iBAAiB,CAAG,UAAW,qBAGnE,EACD,cACL,WAAI,SAAS,CAAC,UAAU,uBACtB,UACE,IAAI,CAAC,SAAS,CACd,OAAO,CAAE,yBAAMC,gBAAe,CAAC,QAAQ,CAAC,EACxC;AAAA,CACA,SAAS,CAAED,UAAU,GAAK,QAAQ,CAAG,iBAAiB,CAAG,UAAW,oBAGlE,EACD,GACJ,EACC,CAGV,CAEA,cAAeF,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}